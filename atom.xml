<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Unown Hearn&#39;s BLOG</title>
  <subtitle>~UN的小窝~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.unown.moe/"/>
  <updated>2017-06-08T18:20:25.000Z</updated>
  <id>http://blog.unown.moe/</id>
  
  <author>
    <name>unown (hearnxu@gmail.com)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E4%B8%80%E4%B8%AA%E4%B8%AD%E4%B8%96%E7%BA%AA%E5%A5%87%E5%B9%BB%E4%B8%96%E7%95%8C%E7%9A%84%E4%B8%96%E7%95%8C%E8%A7%82/"/>
    <id>http://blog.unown.moe/2017/06/09/一个中世纪奇幻世界的世界观/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 一个中世纪奇幻世界的世界观<br>date: “2017-05-01T20:14:04+00:00”T+00:00</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><h3 id="神话时期"><a href="#神话时期" class="headerlink" title="神话时期"></a>神话时期</h3><p>人类被众精灵奴役着, 精灵们各自为战.</p>
<p>大精灵之一的A为了能称霸世界, 决定利用人类因被奴役而产生的怨恨, 与人类合作. 它首先解放了自己手下的人类, 然后将自己的一件三件神器分给了三位人类, 此三位都是伺服另三个大精灵(B, C, D)的宗族中有能力而想要反抗的人. </p>
<p>凭借着神器的力量, A和人类最终取得了胜利, 封印了那三个大精灵 (其他的精灵本身对人类的威胁就相对较小).</p>
<p>由于之前三个大精灵的合力反击, 导致战事比A预想得要激烈, 没有机会依次回收三大神器. 讨伐三大精灵之后, A的力量也有所削弱. 这时, 此三名人类秘密地背叛了A(“当神器归还后, A必定会重新奴役我们”), 将A封印在了E处. </p>
<p>为了安抚其他人类(尤其是A宗族的人)以及建立自己的统治, 三位人类建立了”精灵教”与教会, 称A选择与大地融为一体, 以保护人类; 并称此三人是A的使者, 传递A的福音, 将自己塑造为”三位大贤者”, 而”大贤者”的职位将由自己的家族继承下去(继承人将会被告知真相, 持有的神器是继承人的象征). A宗族的人听从”神旨”迁移到了北方远处, 有关的书籍被焚烧殆尽.</p>
<p>顺便一提, 那个时期的文明水平大概有古希腊、古罗马的程度. “宗族”实际上并非血缘上的关系, 实际的规模大概也能有几个城邦了. </p>
<h3 id="几百年后"><a href="#几百年后" class="headerlink" title="几百年后"></a>几百年后</h3><p>北方商人南下圣地时, 在一座废墟中发现一本古籍残本. 商人虽然读不懂, 但是出于责任感, 将书冒着风险带回了北方. </p>
<p>在商人将书交给A宗族国家F的王室后, 某古老家族的贵族解读了其中的内容. 书上描述了与A沟通的魔法.</p>
<p>此贵族以自己的大部分寿命为代价, 强行施展了魔法, 三位贤者封印A的画面映入眼前. 此贵族从此秘密地组建了异端”赎罪教派”. 此教以解开A的封印为目的, 行为十分极端, 数十万人死于其教徒的屠杀当中. 他们以自己的生命为代价强行施展魔法, 但这些魔法的效率也不佳. 经过贤者后人带领下的几次(血腥)讨伐, 教会最终消灭了此异端, A宗族的人口也大量减少.</p>
<h3 id="又几百年后"><a href="#又几百年后" class="headerlink" title="又几百年后"></a>又几百年后</h3><p>A半苏醒了一段时间, 成功地像一部分人洗脑(并不一定是A宗族的人, 不过相性一定偏向于A). 外称”魔女教派”的异端成立了. 这个教派十分表面温和, 使用着与几百年前”赎罪教派”相同形式的魔法. 教会在发现魔女教派之后便持续打压此异端, 但是魔女教派无孔不入, 持续几百年依旧活跃在暗处. </p>
<h2 id="设定"><a href="#设定" class="headerlink" title="设定"></a>设定</h2><h3 id="宗族"><a href="#宗族" class="headerlink" title="宗族"></a>宗族</h3><ul>
<li>宗族: 传说在神话时代, 不同的宗族以奴隶的身份侍奉着不同的大精灵. 宗族之人与那时侍奉的大精灵有更好的”相性”. 有测试宗族的方法.</li>
<li>无族者: 实际上, 上千年过去之后, 各宗族通婚稀释了后代的血液. 现今除了一部分贵族外,很少人还能区分出原来所属的宗族. </li>
</ul>
<h3 id="魔法"><a href="#魔法" class="headerlink" title="魔法"></a>魔法</h3><ul>
<li>生命力与魔力:<ul>
<li>生命力: 把生命力看做一个数值条的话, 人在出生到成年到衰老的过程中, 数值的上限先变大再变小. 受伤会减小数值, 也可能会缩短数值上限. 数值到零的时候, 人就归西了. 生命力无法由无机物承载.</li>
<li>相性: 每个大精灵都有偏向的魔法属性, 宗族之人的相性实际上指的是其对各魔法属性的适应能力.</li>
<li>魔力: 有多种魔法属性的魔力.</li>
<li>魔力储蓄: 世界上万物都能储蓄魔力, 神器便是无机物中最好的例子. 人类的魔力储蓄能力几乎为零. 另外, 人类也很难从自然中自动汲取并恢复自己的魔力. 根据魔法属性与相性的不同, 能储存的魔力多少也不同, 而且可能会有类似”食物中毒”一样的不良反应.</li>
</ul>
</li>
<li>魔法:<ul>
<li>发动: 正常情况下是消耗魔力和部分生命力来发动魔法. 强行发动魔法需要消耗大量生命力与生命力的上限.</li>
<li>法杖: 正常情况下, 人类无法直接利用魔法, 存储在容器中的魔力需要用类似法杖一类的介质释放. 如果自身是容器的话, 以生命力和生命力上限为代价也可以发动魔法.</li>
<li>魔法准备: 自身作为容器的话, 几乎不需要准备. 但是如果魔力从其他容器来, 基本上先要释放”口令魔法”. 小型魔法的”口令魔法”的魔力消耗基本可以忽略不计.¥</li>
</ul>
</li>
</ul>
<h3 id="魔女教派"><a href="#魔女教派" class="headerlink" title="魔女教派:"></a>魔女教派:</h3><ul>
<li>契约: 以总量占2/3的生命力为代价签署契约, 原本负担总1/2生命力的生命力容器将会转换为魔力储蓄的容器.</li>
<li>仆从: 签订契约之人, 便是A的仆从. 仆从必须无条件接受教派的规定和A的命令. 虽然一时不履行不会出问题, 但之后教派是一定会发现的.</li>
<li>定期反馈: 仆从必须定期去找教派的神职人员. 仆从以神职人员为中介交出其部分生命力给A, 并以此维持魔力储蓄. 交出的生命力量与那段时间仆从汲取的生命力量成比例. 此外, 神职人员在此期间还会询问仆从是否有履行契约, 神职人员借由A的力量有能力鉴别仆从是否说谎.</li>
<li>体型: 由于仆从会失去本身1/2的生命力上限, 基本上只有青年及之前的时期才能签署契约. 也因此, 仆从的身体普遍瘦弱, 甚至曾经许多男仆从被误认成女性, “魔女教派”之名也因此而来. 顺便, 仆从是无法拥有后代的.</li>
<li>不死之躯: 这并不是不可以做到, 用魔法可以维持生命力的上限在某一水平即可. 人类拥有的生命力上限和魔力上限的极限于其壮年时期. 因此, 生命力上限只有可能维持到某一肉体能承受的最高值, 而不可能无限提高. x <em> MaxHP + y </em> MaxMP ≤ z.</li>
<li>A的目的: 大精灵其实并不是很在意时间这个概念. A以求稳作为出发点, 创立了”魔女教派”. 这样, 总有一天, 魔女教派的仆从会为A奉献出足以自我复活的生命力.</li>
<li>融入社会: A不要求仆从与教会对立. 正相反, A甚至认为仆从有必要表面上信奉精灵教. 也因此, 甚至教会高层会混有A的仆从. 不过, 三大贤者家族的成员不可能考虑与A为伍.</li>
<li>汲取生命力: 人死了便会失去生命力, 因此杀人放火并不是一种好选择. 除非是领主并有神职人员陪同, 不然藏人会比较困难, 并且实际效率也并不一定高, 因此囚禁对于一般仆从也不是一个好选择. 一般仆从在别人没发现的时候对某处的人群释放一个汲取生命力的魔法就好了…</li>
</ul>
<h3 id="未归类"><a href="#未归类" class="headerlink" title="未归类"></a>未归类</h3><ul>
<li>异教: 另三个被封印的大精灵同样有其信奉者. 有纯粹信仰的教派也有极端的教派, 人数也不一定. 思维和行动模式要比精灵教和魔女教派要简单.</li>
</ul>
<h2 id="部分剧本"><a href="#部分剧本" class="headerlink" title="部分剧本"></a>部分剧本</h2><ul>
<li>短系列 五世纪: 北方商人南下得到古籍并历经千难万险回到北方将书交给王族的冒险故事.</li>
<li>长系列 十一世纪: 旅行法师(只有魔女教派仆从才可能被称作旅行法师)在旅行途中遇到被奴隶贩子贩卖的少女. 少女设计让法师买下她的自由, 并主动与法师展开了旅行. 路途中少女揭示了自己的身份 — 没落贵族的唯一继承人. 机遇之下两人决定为少女争夺一块领地的所有权. 最后两人从权力的斗争中全身而退, 在另外某处过上了小日子.</li>
<li>短篇集 十一世纪: 世界上各处的故事. 比如另一名魔女教派仆从伯爵的阴谋.</li>
<li>? ?世纪: A复活前夕. 各方势力的明面与暗面的斗争.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/QTU%E7%AC%AC%E4%BA%94%E5%B1%8A%E4%BA%A4%E6%B5%81%E8%B5%9B%E8%A1%A5%E5%AE%8C/"/>
    <id>http://blog.unown.moe/2017/06/09/QTU第五届交流赛补完/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: QTU第五届交流赛补完 (施工中)<br>date: “2016-11-28T15:30:41+00:00”T+00:00<br>tags: [contest, solution]</p>
<h2 id="catalog-contests"><a href="#catalog-contests" class="headerlink" title="catalog: contests"></a>catalog: contests</h2><p>竞赛地址: <a href="http://115.28.203.224/contest.php?cid=1014" target="_blank" rel="external">http://115.28.203.224/contest.php?cid=1014</a></p>
<h2 id="A-yeweiyang的打印服务"><a href="#A-yeweiyang的打印服务" class="headerlink" title="A. yeweiyang的打印服务"></a>A. yeweiyang的打印服务</h2><p><a href="http://115.28.203.224/problem.php?id=1353" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1353</a></p>
<p><del>思路不是很难, 关键是要能正确写出二分法…</del></p>
<p>谜之输出超限. 并不确定二分是否正确…</p>
<p> <img src="/images/Screen Shot 2016-11-28 at 4.35.07 PM 2.png" alt="Screen Shot 2016-11-28 at 4.35.07 PM 2"></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdio.h&gt;</div><div class="line"></div><div class="line">int search(int* s, int n, int x);</div><div class="line"></div><div class="line">#define MIN(x, y) ((x)&lt;(y)?(x):(y))</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">    int T;</div><div class="line">    scanf("%d", &amp;T);</div><div class="line"></div><div class="line">    static int s[100000];</div><div class="line">    static int p[100000];</div><div class="line">    while (T--) &#123;</div><div class="line">        int n, m;</div><div class="line">        scanf("%d%d", &amp;n ,&amp;m);</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            scanf("%d%d", s+i, p+i);</div><div class="line">        &#125;</div><div class="line">        for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">            int r;</div><div class="line">            scanf("%d", &amp;r);</div><div class="line">            int c = search(s, n, r);</div><div class="line">            if (c == n-1)</div><div class="line">                printf("%d\n", r * p[c]);</div><div class="line">            else</div><div class="line">                printf("%d\n", MIN(r*p[c], s[c+1]*p[c+1]));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int search(int* s, int n, int x) &#123;</div><div class="line">    </div><div class="line">    int lo = 0, hi = n;</div><div class="line">    int mid;</div><div class="line">    while (lo &lt; hi) &#123;</div><div class="line">        mid = (lo+hi)/2;</div><div class="line">        if (s[mid] == x) return mid;</div><div class="line">        if (s[mid] &gt; x) hi = mid-1;</div><div class="line">        else lo = mid+1;</div><div class="line">    &#125;</div><div class="line">    if (s[mid] &gt; x) return mid-1;</div><div class="line">    return mid;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h2 id="B-鳕鱼学姐的问题"><a href="#B-鳕鱼学姐的问题" class="headerlink" title="B. 鳕鱼学姐的问题"></a>B. 鳕鱼学姐的问题</h2><p><a href="http://115.28.203.224/problem.php?id=1354" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1354</a></p>
<p>思路已经很明确了:</p>
<ol>
<li>整理出所有不同的”要点”.</li>
<li>维护一个区间[lo, hi], 保证这个区间蕴含所有”要点”.</li>
<li>找到这个区间<code>hi-lo</code>最小时对应的<code>lo_</code>和<code>hi_</code>.</li>
</ol>
<p>万事俱备, 只欠代码…</p>
<hr>
<h2 id="C-Chuxian的比赛"><a href="#C-Chuxian的比赛" class="headerlink" title="C#. Chuxian的比赛"></a>C#. Chuxian的比赛</h2><p><a href="http://115.28.203.224/problem.php?id=1365" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1365</a></p>
<p>水题</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> T;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</div><div class="line">    <span class="keyword">while</span> (T--) &#123;</div><div class="line">        <span class="keyword">int</span> n;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line"></div><div class="line">        <span class="keyword">static</span> <span class="keyword">int</span> a[<span class="number">100000</span>];</div><div class="line">        <span class="keyword">static</span> <span class="keyword">int</span> b[<span class="number">100000</span>];</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, a+i, b+i);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">std</span>::sort(a, a+n);</div><div class="line">        <span class="built_in">std</span>::sort(b, b+n);</div><div class="line"></div><div class="line">        <span class="keyword">int</span> score = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</div><div class="line">            <span class="keyword">if</span> (a[i] &gt; b[i]) score++;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (a[i] &lt; b[i]) score--;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (score &gt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"Winjourn"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"Never_Sorry"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Tie"</span>);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h2 id="D-小E和1"><a href="#D-小E和1" class="headerlink" title="D. 小E和1"></a>D. 小E和1</h2><p>Hint: 1^18^在int64_t的范围之内……</p>
<p><a href="http://115.28.203.224/problem.php?id=1356" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1356</a></p>
<hr>
<h2 id="E-小E与计算器"><a href="#E-小E与计算器" class="headerlink" title="E. 小E与计算器"></a>E. 小E与计算器</h2><p><a href="http://115.28.203.224/problem.php?id=1357" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1357</a></p>
<hr>
<h2 id="F-小E与直升机"><a href="#F-小E与直升机" class="headerlink" title="F. 小E与直升机"></a>F. 小E与直升机</h2><p><a href="http://115.28.203.224/problem.php?id=1358" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1358</a></p>
<hr>
<h2 id="G-小菜的难题"><a href="#G-小菜的难题" class="headerlink" title="G. 小菜的难题"></a>G. 小菜的难题</h2><p><a href="http://115.28.203.224/problem.php?id=1359" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1359</a></p>
<p>学长说要用到二分法, 个人感觉也许另有它法?</p>
<hr>
<h2 id="H-学校的小山"><a href="#H-学校的小山" class="headerlink" title="H. 学校的小山"></a>H. 学校的小山</h2><p><a href="http://115.28.203.224/problem.php?id=1360" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1360</a></p>
<hr>
<h2 id="I-字符串的匹配"><a href="#I-字符串的匹配" class="headerlink" title="I. 字符串的匹配"></a>I. 字符串的匹配</h2><p>在一定数目内忽略未能匹配的字符.</p>
<p><a href="http://115.28.203.224/problem.php?id=1361" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1361</a></p>
<hr>
<h2 id="J-麻烦的转盘"><a href="#J-麻烦的转盘" class="headerlink" title="J. 麻烦的转盘"></a>J. 麻烦的转盘</h2><p>Hint: 递推/动态规划.</p>
<p><a href="http://115.28.203.224/problem.php?id=1362" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1362</a></p>
<hr>
<h2 id="K-麻烦的小卓"><a href="#K-麻烦的小卓" class="headerlink" title="K#. 麻烦的小卓"></a>K#. 麻烦的小卓</h2><p><a href="http://115.28.203.224/problem.php?id=1363" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1363</a></p>
<p>珍珠个数为奇数的时候, 直接输出无解.</p>
<p>把珍珠分为四组, 按照2*2的二维数组排位:</p>
<p>奇数位上的白珍珠 奇数位上的黄珍珠</p>
<p>偶数位上的黄珍珠 偶数位上的白珍珠</p>
<p>观(luàn)察(shì)可知, 答案就是四者中数量最多者对角项的数量.</p>
<p><code>(~maxP)&amp;3</code>即取对角项…</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) == <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">continue</span>;</div><div class="line">        <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">100001</span>];</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</div><div class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>) &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"What a pity!\n"</span>);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> swc = <span class="number">0</span>, dwc = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i+=<span class="number">2</span>) <span class="keyword">if</span> (s[i]==<span class="string">'w'</span>) swc++;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i+=<span class="number">2</span>) <span class="keyword">if</span> (s[i]==<span class="string">'w'</span>) dwc++;</div><div class="line"></div><div class="line"> </div><div class="line">        <span class="keyword">int</span> arr[<span class="number">4</span>] = &#123;swc, n/<span class="number">2</span>-swc, n/<span class="number">2</span>-dwc, dwc&#125;;</div><div class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</div><div class="line">        <span class="keyword">int</span> maxP = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">4</span>; i++) &#123;</div><div class="line">            <span class="keyword">if</span> (arr[i] &gt; max) &#123;</div><div class="line">                max = arr[i];</div><div class="line">                maxP = i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, arr[(~maxP)&amp;<span class="number">3</span>]);</div><div class="line">    &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h2 id="L-麻烦的小柔"><a href="#L-麻烦的小柔" class="headerlink" title="L. 麻烦的小柔"></a>L. 麻烦的小柔</h2><p><a href="http://115.28.203.224/problem.php?id=1364" target="_blank" rel="external">http://115.28.203.224/problem.php?id=1364</a></p>
<p>前两天在哪个新生赛见过类似的…</p>
<hr>
<p>附: 学长的解答 - <a href="http://www.cnblogs.com/kirai/p/6105069.html" target="_blank" rel="external">http://www.cnblogs.com/kirai/p/6105069.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/Solution-HDU-2029/"/>
    <id>http://blog.unown.moe/2017/06/09/Solution-HDU-2029/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: Solution-HDU-2029<br>date: “2016-11-24T23:01:00+00:00”T+00:00<br>tags: [solution, HDU]</p>
<h2 id="catalog-solutions"><a href="#catalog-solutions" class="headerlink" title="catalog: solutions"></a>catalog: solutions</h2><p>原题: <a href="http://acm.hdu.edu.cn/showproblem.php?pid=2029" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2029</a></p>
<h4 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h4><blockquote>
<p>“回文串”是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。请写一个程序判断读入的字符串是否是“回文”。</p>
</blockquote>
<hr>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>能有啥思路…</p>
<hr>
<h4 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h4><p>第29行改成<code>p1&lt;=p2</code>依旧能通过样例, 误WA了一次…</p>
<p> <img src="/images/Screen Shot 2016-11-24 at 11.41.14 PM.png" alt="Screen Shot 2016-11-24 at 11.41.14 PM"></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LINE_MAX 100</span></div><div class="line"></div><div class="line"><span class="keyword">char</span> line[LINE_MAX];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</div><div class="line">    <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>);</div><div class="line">    <span class="keyword">while</span> (n--) &#123;</div><div class="line">        <span class="keyword">int</span> p2 = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> (p2&lt;LINE_MAX<span class="number">-1</span> &amp;&amp; (line[p2]=getchar())!=<span class="string">'\n'</span> &amp;&amp; line[p2] != EOF) p2++;</div><div class="line"></div><div class="line">        line[p2] = <span class="string">'\0'</span>;</div><div class="line"></div><div class="line">        p2--;</div><div class="line">        <span class="keyword">int</span> p1 = <span class="number">0</span>;</div><div class="line">        <span class="keyword">bool</span> isPalindromes = <span class="literal">true</span>;</div><div class="line">        <span class="comment">//printf("%d %d", p1, p2);</span></div><div class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (line[p1]!=line[p2]) &#123;</div><div class="line">                isPalindromes = <span class="literal">false</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            p1++;</div><div class="line">            p2--;</div><div class="line">            <span class="keyword">if</span> (p1&gt;=p2) <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, isPalindromes ? <span class="string">"yes"</span>:<span class="string">"no"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/Solution-HDU-2031/"/>
    <id>http://blog.unown.moe/2017/06/09/Solution-HDU-2031/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: Solution-HDU-2031 进制转换<br>date: “2016-11-25T13:51:20+00:00”T+00:00<br>tags: [solution, HDU]</p>
<h2 id="catalog-solutions"><a href="#catalog-solutions" class="headerlink" title="catalog: solutions"></a>catalog: solutions</h2><p>原题: <a href="http://acm.hdu.edu.cn/showproblem.php?pid=2031" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2031</a></p>
<h4 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h4><p>输入一个十进制数N，将它转换成R进制数输出。</p>
<hr>
<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>其实当<code>N=INT32_MIN</code>时是有问题的(最简单地解决方案是把x的类型改为int64_t). 不过显然TestData里没有这个数, 所以可以AC.</p>
<p><img src="/images/Screen Shot 2016-11-25 at 1.59.17 PM.png" alt="Screen Shot 2016-11-25 at 1.59.17 PM"></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">char</span> number[<span class="number">16</span>] = &#123; <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>&#125;;</div><div class="line"></div><div class="line"><span class="comment">// a*16 &gt; b </span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> base;</div><div class="line">    <span class="keyword">int32_t</span> x;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;base) == <span class="number">2</span>) &#123;</div><div class="line">        <span class="keyword">bool</span> isNegative = <span class="literal">false</span>;</div><div class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</div><div class="line">            x = -x;</div><div class="line">            isNegative = <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> d = <span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span> (; x/base &gt;= d; d *= base);</div><div class="line">        <span class="keyword">if</span> (isNegative) <span class="built_in">putchar</span>(<span class="string">'-'</span>);</div><div class="line">        <span class="keyword">for</span> (; d != <span class="number">0</span>; d /= base) &#123;</div><div class="line">            <span class="built_in">putchar</span>(number[x/d]);</div><div class="line">            x %= d;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/hello-world/"/>
    <id>http://blog.unown.moe/2017/06/09/hello-world/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<h2 id="title-Hello-World"><a href="#title-Hello-World" class="headerlink" title="title: Hello World"></a>title: Hello World</h2><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/Solution-HDU-2032/"/>
    <id>http://blog.unown.moe/2017/06/09/Solution-HDU-2032/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: Solution-HDU-2032 杨辉三角<br>date: “2016-11-25T16:02:47+00:00”T+00:00<br>tags: [solution, HDU]</p>
<h2 id="catalog-solutions"><a href="#catalog-solutions" class="headerlink" title="catalog: solutions"></a>catalog: solutions</h2><p>原题: <a href="http://acm.hdu.edu.cn/showproblem.php?pid=2032" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2032</a></p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>观察杨辉三角.</p>
<p>对于第n行第m个数N~m~, 总满足:</p>
<p>N~1~ = 1, N~m~ = (n-m+1)/m*N~m-1~.</p>
<hr>
<h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><p><img src="/images/Screen Shot 2016-11-25 at 4.10.58 PM.png" alt="Screen Shot 2016-11-25 at 4.10.58 PM"></p>
<p>其实第17行~21行是试出来的😜.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) == <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n+<span class="number">1</span>; i++) &#123;</div><div class="line">            <span class="keyword">int</span> x = <span class="number">1</span>;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"1"</span>);</div><div class="line">            <span class="keyword">int</span> j = <span class="number">2</span>;</div><div class="line">            <span class="keyword">for</span> (; j<span class="number">-1</span> &lt;= (i<span class="number">-1</span>)/<span class="number">2</span>; j++) &#123;</div><div class="line">                x = (i-j+<span class="number">1</span>)*x/(j<span class="number">-1</span>);</div><div class="line">                <span class="built_in">printf</span>(<span class="string">" %d"</span>, x);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (i%<span class="number">2</span>==<span class="number">0</span>) &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">" %d"</span>, x);</div><div class="line">            &#125;</div><div class="line">            j--;</div><div class="line">            <span class="keyword">for</span> (; j &gt; <span class="number">1</span>; j--) &#123;</div><div class="line">                x = (j<span class="number">-1</span>)*x/(i-j+<span class="number">1</span>);</div><div class="line">                <span class="built_in">printf</span>(<span class="string">" %d"</span>, x);</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/rmxp%E4%B8%8A%E7%9A%84%E8%87%AA%E5%8A%A8%E6%8D%A2%E8%A1%8C/"/>
    <id>http://blog.unown.moe/2017/06/09/rmxp上的自动换行/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: rmxp上最简单的自动换行<br>date: “2016-12-28T12:05:48+00:00”T+00:00</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>RMXP中ruby的版本是1.8.3, 所以正则表达式的字符集不支持多字节字符, 更不用提\p{xxx}了…</p>
<p>于是, 用于分块的正则表达式我写成了这样(没有考虑分词, 也没有考虑截断过长的单词):</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 汉字, 可能不全. 估计没包含扩展区的汉字, 也不知道日式汉字的情况...</span></div><div class="line">HanZi= <span class="string">'(?:\xe4[\xb8-\xbf][\x80-\xbf]|[\xe5-\xe8][\x80-\xbf][\x80-\xbf]|\xe9[\x80-\xbd][\x80-\xbf]|\xe9\xbe[\x80-\xa5])'</span></div><div class="line"><span class="comment"># 假名, 但是似乎没有全角假名...</span></div><div class="line">Kana = <span class="string">'(?:(?:\xE3\x81[\x81-\xBF]|\xE3\x82[\x80-\x93]|\xE3\x83\xBC)|(?:\xE3\x82[\xA1-\xBF]|\xE3\x83[\x80-\xB6]|\xE3\x83\xBC))'</span></div><div class="line"></div><div class="line"><span class="comment"># 拉丁字母, 可能不全...</span></div><div class="line">LatinCharSet = <span class="string">'[a-zA-ZÀÁÂÃÄÅàáâãäåĀāĂăĄąÇçĆćĈĉĊċČčÐðĎďĐđÈÉÊËèéêëĒēĔĕĖėĘęĚěĜĝĞğĠġĢģĤĥĦħÌÍÎÏìíîïĨĩĪīĬĭĮįİıĴĵĶķĸĹĺĻļĽľĿŀŁłÑñŃńŅņŇňŉŊŋÒÓÔÕÖØòóôõöøŌōŎŏŐőŔŕŖŗŘřŚśŜŝŞşŠšſŢţŤťŦŧÙÚÛÜùúûüŨũŪūŬŭŮůŰűŲųŴŵÝýÿŶŷŸŹźŻżŽž]'</span></div><div class="line"><span class="comment"># 全角Ａ-Ｚ</span></div><div class="line">FullWidthLatin = <span class="string">'(?:\xef(?:\xbc[\xa1-\xba]|\xbd[\x81-\x9a]))'</span></div><div class="line"><span class="comment"># 全角数字</span></div><div class="line">FullWidthNumber = <span class="string">'(?:\xef\xbc[\x90-\x99])'</span></div><div class="line"><span class="comment"># 希腊字母, 可能不全...</span></div><div class="line">GreekCharSet = <span class="string">'[Ά-ώ]'</span></div><div class="line"><span class="comment"># 单词</span></div><div class="line">WesternLatinWord = <span class="regexp">/(?:<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:LatinCharSet</span>&#125;</span>|<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:GreekCharSet</span>&#125;</span>|<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:FullWidthLatin</span>&#125;</span>|[0-9]|<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:FullWidthNumber</span>&#125;</span>)+\-?/</span></div><div class="line"></div><div class="line"><span class="comment"># 不能再行首出现的标点</span></div><div class="line">NotAllowedAtStartSet = <span class="string">'[\)\]\&#125;&gt;\.,\!?;:\-~"\'%]'</span></div><div class="line"><span class="comment">#↓ 。？！，、；：～…）】”’》﹞＞〗〉〕›］」』－</span></div><div class="line">NotAllowedAtStartFullWidth = <span class="string">'(?:\xe2\x80[\x99\x9d\xa6\xba]|\xe3\x80[\x81\x82\x89\x8b\x8d\x8f\x91\x95\x97]|\xef(?:\xb9\x9e|\xbc[\x81\x89\x8c\x8d\x9a\x9b\x9e\x9f\xbd]|\xbd\x9e))'</span></div><div class="line">NotAllowedAtStart = <span class="regexp">/(?:<span class="subst">#&#123;NotAllowedAtStartSet&#125;</span>|<span class="subst">#&#123;NotAllowedAtStartFullWidth&#125;</span>)/</span></div><div class="line"></div><div class="line"><span class="comment"># 不能再行尾出现的标点</span></div><div class="line">NotAllowedAtEndSet = <span class="string">'[\(\[\&#123;&lt;\$@]'</span></div><div class="line"><span class="comment">#↓ ﹤（【“‘《﹝＜〖〈〔‹「『</span></div><div class="line">NotAllowedAtEndFullWidth = <span class="string">'(?:\xef(?:\xb9[\xa4\x9d]|\xbc[\x88\x9c]))|(?:\xe3(?:\x80[\x90\x8a\x96\x88\x94\x8c\x8e]))|(?:\xe2(?:\x80[\x9c\x98\xb9]))'</span></div><div class="line">NotAllowedAtEnd = <span class="regexp">/(?:<span class="subst">#&#123;NotAllowedAtEndSet&#125;</span>|<span class="subst">#&#123;NotAllowedAtEndFullWidth&#125;</span>)/</span></div><div class="line"></div><div class="line"><span class="comment"># 最终拼起来的正则表达式</span></div><div class="line">LineBreakingRx = <span class="regexp">/(?:\n|\s+|<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:NotAllowedAtEnd</span>&#125;</span>*(<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:HanZi</span>&#125;</span>|<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:Kana</span>&#125;</span>|<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:WesternLatinWord</span>&#125;</span>|\S)<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:NotAllowedAtStart</span>&#125;</span>*)\s*/n</span></div></pre></td></tr></table></figure>
<p>1.9往后版本的ruby(也就是说RMVA就可以使用了), 上面的那段正则可以写成这样:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 不能再行首出现的标点</span></div><div class="line">NotAllowedAtStartSet = <span class="regexp">/[\)\]\&#125;&gt;\.,\!?;:\-~"\'%。？！，、；：～…）】”’》﹞＞〗〉〕›］」』－]/</span></div><div class="line"></div><div class="line"><span class="comment"># 不能再行尾出现的标点</span></div><div class="line">NotAllowedAtEndSet = <span class="regexp">/[\(\[\&#123;&lt;\$@﹤（【“‘《﹝＜〖〈〔‹「『]/</span></div><div class="line"></div><div class="line"><span class="comment"># 最终拼起来的正则表达式</span></div><div class="line">LineBreakingRx = <span class="regexp">/(?:\n|\s+|<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:NotAllowedAtEndSet</span>&#125;</span>*([\p&#123;Han&#125;\p&#123;Hiragana&#125;\p&#123;Katakana&#125;ー－]|[\p&#123;Latin&#125;\p&#123;Greek&#125;\p&#123;N&#125;]+\-?|\S)<span class="subst">#&#123;<span class="symbol">:</span><span class="symbol">:NotAllowedAtStartSet</span>&#125;</span>*)\s*/</span></div></pre></td></tr></table></figure>
<p>简洁了不止一点半点, 而且不会漏字符…</p>
<hr>
<p>Line breaking, 则是稍微修改了一下游戏脚本中原有的函数, 最终修改完的代码如下:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBrokenLines</span><span class="params">(bitmap,value,width)</span></span></div><div class="line">  x=<span class="number">0</span></div><div class="line">  lines=[]</div><div class="line"></div><div class="line">  <span class="keyword">return</span> [value] <span class="keyword">if</span> !bitmap <span class="params">||</span> bitmap.disposed? <span class="params">||</span> width&lt;=<span class="number">0</span></div><div class="line">  textmsg=value.clone</div><div class="line">  </div><div class="line">  line = <span class="string">""</span></div><div class="line">  <span class="keyword">while</span> (word = textmsg.slice!(<span class="symbol">:</span><span class="symbol">:LineBreakingRx</span>)) != <span class="literal">nil</span></div><div class="line">    <span class="keyword">if</span> word==<span class="string">""</span></div><div class="line">      lines &lt;&lt; line</div><div class="line">      <span class="keyword">break</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="keyword">if</span> word==<span class="string">"\n"</span></div><div class="line">      x=<span class="number">0</span></div><div class="line">      lines &lt;&lt; line</div><div class="line">      line = <span class="string">""</span></div><div class="line">      <span class="keyword">next</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="keyword">if</span> word &amp;&amp; word!=<span class="string">""</span></div><div class="line">      textwidth=bitmap.text_size(word).width</div><div class="line">      <span class="keyword">if</span> x&gt;<span class="number">0</span> &amp;&amp; x+textwidth&gt;=width-<span class="number">2</span></div><div class="line">        lines &lt;&lt; line</div><div class="line">        line = <span class="string">""</span></div><div class="line">        x=<span class="number">0</span></div><div class="line">      <span class="keyword">end</span></div><div class="line">      line += word</div><div class="line">      x+=textwidth</div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line">  lines &lt;&lt; line</div><div class="line">  <span class="keyword">return</span> lines</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E4%B8%A4%E4%B8%AA%E7%AE%80%E5%8C%96hexo%E6%93%8D%E4%BD%9C%E7%9A%84%E5%B0%8F%E8%84%9A%E6%9C%AC/"/>
    <id>http://blog.unown.moe/2017/06/09/两个简化hexo操作的小脚本/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 两个简化hexo操作的小脚本<br>date: “2016-11-23T16:25:48+00:00”T+00:00</p>
<h2 id="tags-sh脚本-hexo"><a href="#tags-sh脚本-hexo" class="headerlink" title="tags: [sh脚本, hexo]"></a>tags: [sh脚本, hexo]</h2><p>这里假设博客的本地目录是<code>~/Documents/hexo/blog</code>, 使用typora作为markdown编辑器.</p>
<p>一键生成&amp;部署hexo博客:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="built_in">cd</span> ~/Documents/hexo/blog</div><div class="line"><span class="built_in">echo</span> 生成中...</div><div class="line"></div><div class="line"><span class="comment"># 如果生成出现问题, 可以试试取消注释以下两句. </span></div><div class="line"><span class="comment"># 不过如果这么做, 阁下每次都要完全重新编译一遍文章...</span></div><div class="line">hexo clean <span class="comment"># 然而不执行它的话, 会有bug......</span></div><div class="line">    <span class="comment">#hexo g</span></div><div class="line">rm -rf ./public/</div><div class="line"></div><div class="line">hexo g</div><div class="line"></div><div class="line"><span class="comment"># 直接放在source目录下的话, 文件会被编译...</span></div><div class="line"><span class="keyword">for</span> f <span class="keyword">in</span> ./addition/*</div><div class="line"><span class="keyword">do</span></div><div class="line">    cp -rf <span class="variable">$f</span> ./public/</div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> 生成完毕~</div><div class="line"></div><div class="line"><span class="built_in">echo</span> 部署中...</div><div class="line">hexo d</div><div class="line"><span class="built_in">echo</span> 部署完毕~</div></pre></td></tr></table></figure>
<hr>
<p>新建博文并用typora打开:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"></div><div class="line"><span class="built_in">cd</span> ~/Documents/hexo/blog</div><div class="line"></div><div class="line"><span class="keyword">if</span> <span class="built_in">test</span> -z <span class="variable">$1</span></div><div class="line"><span class="keyword">then</span></div><div class="line">    <span class="built_in">read</span> -p <span class="string">'请输入文章标题:'</span> para</div><div class="line"><span class="keyword">else</span></div><div class="line">    para=<span class="variable">$@</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">ret=`hexo n <span class="string">"<span class="variable">$para</span>"</span>`</div><div class="line">file=`<span class="built_in">echo</span> <span class="variable">$ret</span> |sed <span class="string">'s/INFO Created: ~\(.*\)/\1/g'</span>`</div><div class="line">open <span class="_">-a</span> typora ~/<span class="variable">$file</span> <span class="comment"># 如果阁下是用MacOS, 请确保安装了typora. 如果阁下用的不是MacOS, 这里需要自行修改.</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E4%B8%80%E4%B8%AATCG%E7%9A%84%E5%8E%9F%E5%9E%8B/"/>
    <id>http://blog.unown.moe/2017/06/09/一个TCG的原型/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 一个TCG的原型<br>date: “2017-02-18T17:48:44+00:00”T+00:00<br>tags:</p>
<hr>
<ol>
<li>卡组内卡牌数量: 至少N张, 至多不限. 有同名卡限制.</li>
<li>卡牌种类: 使者, 其他.</li>
<li>使者拥有属性和种族, 或者其他什么的. 还有费用, 价值, ATK/DEF, 阶段效果等数值</li>
<li>回合流程: 回合开始阶段 -&gt; 抽牌阶段 -&gt; 主要阶段 -&gt; 回合结束阶段 -&gt; (弃牌阶段).</li>
<li>当前回合的玩家进入主要阶段, 即可宣言攻击, 攻击结束后, 横置使者. 攻击无穿刺, 由攻击者选择目标, A.AKT&gt;=D.DEF即战破. 被战破的使者将叠放于攻击者的牌之下.对方场上还有未横置的使者时无法直接攻击对方. 下次回合开始将横置的使者复位.</li>
<li>随着使者下方倒置的牌增减, 使者的效果和价值也会发生改变.</li>
<li>主要阶段时, 可以选中几张非横置使者, 若这些牌提供的价值大于等于需要召唤的使者/需要发动的其他牌, 可以将那些选中的牌送入墓地, 召唤该使者/发动该牌.</li>
<li>其他类牌中也有有临时提供价值效果的牌.</li>
<li>使用堆叠机制.</li>
<li>[(触发/启动)发动条件] (生效条件) 效果. 如: [(启动) (支付费用A*x+转化B|去除叠放C)+选择火属性使者] 若该使者叠放数≥2, 消灭该使者. </li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/Solution-HDU-2028/"/>
    <id>http://blog.unown.moe/2017/06/09/Solution-HDU-2028/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: Solution-HDU-2028<br>date: “2016-11-24T15:24:19+00:00”T+00:00<br>tags: [solution, HDU]</p>
<h2 id="catalog-solutions"><a href="#catalog-solutions" class="headerlink" title="catalog: solutions"></a>catalog: solutions</h2><p>原题: <a href="http://acm.hdu.edu.cn/showproblem.php?pid=2028" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2028</a></p>
<h4 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h4><blockquote>
<p>求n个数的最小公倍数。</p>
</blockquote>
<hr>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">LCM</span><span class="params">(a, b)</span>:</span></div><div class="line">	c = GCD(a, b)</div><div class="line">	<span class="keyword">return</span> a * b / c</div></pre></td></tr></table></figure>
<hr>
<h4 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h4><p>😂第一次提交的版本WA了, 读错题了. 以为头一个数也算在内, 要自己判断每一组数据的边界.</p>
<p>😂第二次提交的瞬间发现自己没有修改第44行, 又白白CE.</p>
<p>提交结果: <img src="/images/Screen Shot 2016-11-24 at 8.21.20 PM.png" alt=""></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line">Lowest Common Multiple Plus</div><div class="line"></div><div class="line">Problem Description</div><div class="line">求n个数的最小公倍数。</div><div class="line"></div><div class="line">Input</div><div class="line">输入包含多个测试实例，每个测试实例的开始是一个正整数n，然后是n个正整数。</div><div class="line"></div><div class="line">Output</div><div class="line">为每组测试数据输出它们的最小公倍数，每个测试实例的输出占一行。你可以假设最后的输出是一个32位的整数。</div><div class="line"></div><div class="line">Sample Input</div><div class="line">2 4 6</div><div class="line">3 2 5 7</div><div class="line"></div><div class="line">Sample Output</div><div class="line">12</div><div class="line">70</div><div class="line">*/</div><div class="line"></div><div class="line"><span class="keyword">uint32_t</span> gcd(<span class="keyword">uint32_t</span> a, <span class="keyword">uint32_t</span> b) &#123;</div><div class="line">    <span class="keyword">int</span> c = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (a%<span class="number">2</span> == <span class="number">0</span> &amp;&amp; b%<span class="number">2</span> == <span class="number">0</span>) &#123;a&gt;&gt;=<span class="number">1</span>;b&gt;&gt;=<span class="number">1</span>;c++;&#125;</div><div class="line">    <span class="keyword">while</span> (a%<span class="number">2</span>==<span class="number">0</span>) a&gt;&gt;=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> (b%<span class="number">2</span>==<span class="number">0</span>) b&gt;&gt;=<span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (a &lt; b) &#123;</div><div class="line">            <span class="keyword">uint32_t</span> temp = a;</div><div class="line">            a = b;</div><div class="line">            b = temp;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a==b) <span class="keyword">break</span>;</div><div class="line">        a = (a+b) &gt;&gt; <span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span> (a%<span class="number">2</span>==<span class="number">0</span>) a&gt;&gt;=<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> b &lt;&lt; c;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//uint32_t lcm(a, b) &#123; // 意外地发现clang可以省略参数的类型...</span></div><div class="line"><span class="keyword">uint32_t</span> lcm(<span class="keyword">uint32_t</span> a, <span class="keyword">uint32_t</span> b) &#123;</div><div class="line"><span class="keyword">return</span> a / gcd(a, b) * b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></div><div class="line">    freopen(<span class="string">"2028.testcase.example.in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</div><div class="line">    <span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// DEBUG</span></span></div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) == <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">uint32_t</span> result = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> (n--) &#123;</div><div class="line">            <span class="keyword">uint32_t</span> x;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</div><div class="line">            <span class="keyword">if</span> (result!=<span class="number">0</span>) result = lcm(result, x);</div><div class="line">            <span class="keyword">else</span> result = x;</div><div class="line"></div><div class="line">            <span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></div><div class="line">            <span class="built_in">printf</span>(<span class="string">"(%d, %d)"</span>, x, result);            </div><div class="line">            <span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// DEBUG</span></span></div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, result);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E6%97%A5%E5%90%8E%E5%8F%AF%E4%BB%A5%E8%80%83%E8%99%91%E7%9A%84%E4%B8%80%E4%BA%9B%E6%94%B9%E8%BF%9B/"/>
    <id>http://blog.unown.moe/2017/06/09/日后可以考虑的一些改进/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 日后可以考虑的一些改进<br>date: “2016-11-24T13:43:41+00:00”T+00:00</p>
<h2 id="tags-hexo"><a href="#tags-hexo" class="headerlink" title="tags: hexo"></a>tags: hexo</h2><ul>
<li>每次生成时建立索引并push到服务器上, 由服务器处理站内搜索.</li>
</ul>
<ul>
<li>disqus在国内不翻墙的情况下无法正常使用, 需要考虑更换评论系统. 不如以后造个轮子?</li>
<li>hexo默认没有设定使博文不在首页显示, 以后可以考虑做个插件实现此功能.</li>
<li>可以考虑实现个系列博文的插件, 使同一主题的多个博文间可以快速切换.</li>
<li>虽然已经有了针对多个博文的加密插件, 但是加密分类的插件目前并没有, 可以考虑实现.</li>
<li>对文章多了以后hexo能否很快地生成博客表示怀疑. 如果可以的话, 可以改造之. 用前端的模板引擎, 将数据保存为json文件来进行优化. 虽然对搜索引擎的爬虫会有阻碍作用, 并且会额外增加get请求的数量, 但是可以避免重复的生成网页.</li>
<li>置顶博文…</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E6%95%B4%E7%90%86%E3%80%8ADocker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E4%BA%91%E3%80%8B%E4%B8%80%E4%B9%A62.3%E7%AB%A0%E8%8A%82%E7%9A%84%E5%86%85%E5%AE%B9/"/>
    <id>http://blog.unown.moe/2017/06/09/整理《Docker容器与容器云》一书2.3章节的内容/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 整理《Docker容器与容器云》一书2.3章节的内容<br>date: “2017-02-17T19:05:23+00:00”T+00:00</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>章节标题: 搭建你的第一个Docker应用栈</p>
<p>环境: Mac OS, Docker 1.13.1 for Mac</p>
<p><strong>仅用于自我学习(并非完整内容)</strong></p>
<h2 id="Step-1-获取镜像"><a href="#Step-1-获取镜像" class="headerlink" title="Step 1. 获取镜像"></a>Step 1. 获取镜像</h2><p>国内访问Docker Hub的速度较慢, 不过所幸国内一些企业提供Docker Hub的mirror.</p>
<p>不过, 国内的mirror中image的版本可能会旧一些, 如果介意的话还请斟酌.</p>
<p>我使用的是DaoCloud提供的(免费使用, 需要注册一个账号, 之后可以参考<a href="https://www.daocloud.io/mirror" target="_blank" rel="external">Docker 加速器</a>进行配置)</p>
<p>稍微要提的一点是, 在较新版本的Docker for Mac中, Preferences里Advanced标签页下的Registry mirrors被移到了Daemon标签页. DaoCloud的配置说明里还未更新这一点.</p>
<p>接下来, 按书中所说:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># 实际上, 我全程都不需要sudo, 因此省略掉sudo</div><div class="line"># 如果某条命令因为权限问题, 可以试试加上sudo</div><div class="line">docker pull ubuntu </div><div class="line">docker pull django</div><div class="line">docker pull haproxy</div><div class="line">docker pull redis</div></pre></td></tr></table></figure>
<p>之后执行<code>docker images</code>, 预期的输出类似:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">redis               latest              1a8a9ee54eb7        38 hours ago        183 MB</div><div class="line">haproxy             latest              74cb0bec9b30        3 weeks ago         135 MB</div><div class="line">django              latest              eb40dcf64078        8 weeks ago         436 MB</div><div class="line">ubuntu              14.04               aae2b63c4946        2 months ago        188 MB</div></pre></td></tr></table></figure>
<hr>
<h2 id="Step-2-启动容器"><a href="#Step-2-启动容器" class="headerlink" title="Step 2. 启动容器"></a>Step 2. 启动容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"># 书中没有提到, 不过想想就知道, 需要先在主机上创建将要挂载到容器里的文件夹:</div><div class="line">mkdir ~/Projects</div><div class="line">cd ~/Projects</div><div class="line"># 书中说在利用Redis镜像启动容器时会自动挂载, 但是我实际操作时并没有...</div><div class="line"># 所以我们就自己来进行挂载吧</div><div class="line">mkdir Redis Redis/Master Redis/Slave1 Redis/Slave2</div><div class="line">mkdir Django Django/APP1 Django/APP2</div><div class="line">mkdir HAProxy</div><div class="line"></div><div class="line"></div><div class="line"># 打开6个终端, 依次为每个终端执行以下其中一个命令:</div><div class="line"># 终端 1</div><div class="line">docker run -it --name redis-master -v ~/Projects/Redis/Master:/data redis /bin/bash</div><div class="line"># 终端 2</div><div class="line">docker run -it --name redis-slave1 --link redis-master:master -v ~/Projects/Redis/Slave1:/data redis /bin/bash</div><div class="line"># 终端 3</div><div class="line">docker run -it --name redis-slave2 --link redis-master:master -v ~/Projects/Redis/Slave2:/data redis /bin/bash</div><div class="line"># 终端 4</div><div class="line">docker run -it --name APP1 --link redis-master:db -v ~/Projects/Django/App1:/usr/src/app django /bin/bash</div><div class="line"># 终端 5</div><div class="line">docker run -it --name APP2 --link redis-master:db -v ~/Projects/Django/App2:/usr/src/app django /bin/bash</div><div class="line"># 终端 6</div><div class="line">docker run -it --name HAProxy --link APP1:APP1 --link APP2:APP2 -p 6301:6301 -v ~/Projects/HAProxy:/tmp haproxy /bin/bash</div></pre></td></tr></table></figure>
<hr>
<h2 id="Step3-配置Redis"><a href="#Step3-配置Redis" class="headerlink" title="Step3. 配置Redis"></a>Step3. 配置Redis</h2><p>书中说”利用启动配置文件模板来创建启动配置文件”, 但是并没有提供”启动配置文件模板”(也许是我没找到?)</p>
<p>那么, 我们可以自己从<a href="http://download.redis.io/redis-stable/redis.conf" target="_blank" rel="external">redis.conf</a>下载原始的配置文件, 修改并放到<code>~/Projects/Redis/&lt;相应文件夹&gt;</code>下.</p>
<p>然后对于<code>redis-master</code>, 要修改这一些内容(“A =&gt; B”代表把A修改为B):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">demonize no =&gt; demonize yes</div><div class="line"></div><div class="line"># 其实不修改也可以, 直接注释也可以</div><div class="line">pidfile /var/run/redis_6379.pid =&gt; pidfile /var/run/redis.pid</div><div class="line"></div><div class="line"># 如果不修改, slave将无法同步master, 会提示&quot;Error condition on socket for SYNC: Connection refused&quot;</div><div class="line">bind 127.0.0.1 =&gt; bind 0.0.0.0</div></pre></td></tr></table></figure>
<p>对于<code>redis-slave1</code> <code>redis-slave2</code>, 需要修改:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">demonize no =&gt; demonize yes</div><div class="line"></div><div class="line"># 其实不修改, 或者直接注释掉也可以</div><div class="line">pidfile /var/run/redis_6379.pid =&gt; pidfile /var/run/redis.pid</div><div class="line"></div><div class="line">slaveof master 6379</div></pre></td></tr></table></figure>
<p>启动redis(终端1, 2, 3):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd /data</div><div class="line"># 不知道为什么书中还要把redis.conf复制到/usr/local/bin下</div><div class="line">redis-server redis.conf</div></pre></td></tr></table></figure>
<hr>
<h2 id="Step-4-配置Django和HAProxy"><a href="#Step-4-配置Django和HAProxy" class="headerlink" title="Step 4. 配置Django和HAProxy"></a>Step 4. 配置Django和HAProxy</h2><p>这部分书中讲的没什么大问题, 就提以下几点:</p>
<ol>
<li><p>修改完Django的几个文件后, 不用执行书中所述的<code>python manage.py syncdb</code>, 这个命令已经不需要且不存在了.</p>
</li>
<li><p>haproxy.cfg也不需要复制到<code>/usr/local/sbin</code>下.</p>
</li>
<li><p>HAProxy容器的IP地址应该用<code>docker inspect HAProxy</code> </p>
<p> (当前版本的docker可以用<code>docker inspect HAProxy --format &quot;\{\{ .NetworkSettings.IPAddress \}\}&quot;</code>来直接查看). (请自行去掉花括号前面的<code>\</code>, 在文章里去掉会导致Hexo崩溃, 囧…)</p>
<p>不过我发现<code>http://&lt;HAProxy容器的IP&gt;:6301</code>是无法访问的…</p>
</li>
<li><p>可以用<code>http://localhost:6301/</code>代替上一条所说的IP在本机访问相关页面, 因为之前创建HAProxy容器时映射了6301端口</p>
</li>
</ol>
<p>顺便为手懒的人提供书中要打的部分代码:</p>
<h3 id="Projects-Django-App1-dockerweb-redisweb-helloworld-views-py"><a href="#Projects-Django-App1-dockerweb-redisweb-helloworld-views-py" class="headerlink" title="~/Projects/Django/App1/dockerweb/redisweb/helloworld/views.py"></a>~/Projects/Django/App1/dockerweb/redisweb/helloworld/views.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</div><div class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</div><div class="line"></div><div class="line"><span class="keyword">import</span> redis</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(request)</span>:</span></div><div class="line">    str = redis.__file__</div><div class="line">    str += <span class="string">"&lt;br&gt;"</span></div><div class="line">    r = redis.Redis(host=<span class="string">'db'</span>, port=<span class="number">6379</span>, db=<span class="number">0</span>)</div><div class="line">    info = r.info()</div><div class="line">    str += <span class="string">'Set Hi &lt;br&gt;'</span></div><div class="line">    r.set(<span class="string">'Hi'</span>, <span class="string">'HelloWorld-APP1'</span>)</div><div class="line">    str += <span class="string">'Get Hi: %s &lt;br&gt;'</span> % r.get(<span class="string">'Hi'</span>)</div><div class="line">    str += <span class="string">'Redis Info: &lt;br&gt;'</span></div><div class="line">    str += (<span class="string">"Ke: Info Value"</span>)</div><div class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> info:</div><div class="line">        str += <span class="string">"%s: %s &lt;br&gt;"</span> % (key, info[key])</div><div class="line">    <span class="keyword">return</span> HttpResponse(str)</div></pre></td></tr></table></figure>
<h3 id="Projects-HAProxy-haproxy-cfg"><a href="#Projects-HAProxy-haproxy-cfg" class="headerlink" title="~/Projects/HAProxy/haproxy.cfg"></a>~/Projects/HAProxy/haproxy.cfg</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">global</div><div class="line">    log 127.0.0.1 local0</div><div class="line">    maxconn 4096</div><div class="line">    chroot /usr/local/sbin</div><div class="line">    daemon</div><div class="line">    nbproc 4</div><div class="line">    pidfile /usr/local/sbin/haproxy.pid</div><div class="line"></div><div class="line">defaults</div><div class="line">    log 127.0.0.1 local3</div><div class="line">    mode http</div><div class="line">    option dontlognull</div><div class="line">    option redispatch</div><div class="line">    retries 2</div><div class="line">    maxconn 2000</div><div class="line">    balance roundrobin</div><div class="line">    timeout connect 5000ms</div><div class="line">    timeout client 50000ms</div><div class="line">    timeout server 50000ms</div><div class="line"></div><div class="line">listen redis_proxy </div><div class="line">    bind 0.0.0.0:6301</div><div class="line">    stats enable</div><div class="line">    stats uri /haproxy-stats</div><div class="line">        server APP1 APP1:8001 check inter 2000 rise 2 fall 5</div></pre></td></tr></table></figure>
<hr>
<p>嗯, 大概就是这些了…</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E6%97%A5%E8%AE%B0-2016-11-24/"/>
    <id>http://blog.unown.moe/2017/06/09/日记-2016-11-24/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 日记 2016-11-24<br>date: “2016-11-24T14:45:59+00:00”T+00:00<br>tags: 日记<br>catalogs: 日记</p>
<h2 id="password-“-rabbit-”"><a href="#password-“-rabbit-”" class="headerlink" title="password: “:rabbit:”"></a>password: “:rabbit:”</h2><p>今日任务:</p>
<ul>
<li>五道题: 2/5</li>
<li>50个单词: 0/50</li>
</ul>
<p>接到张育萌学长的通知, 不用再去ifLab大一新生的活动了.</p>
<p>不过, 我还是要尽早看一遍概率统计方面的课程.</p>
<p>这之前, 还有线性代数和高等数学等着我…</p>
<p>相比HDUOJ, 不如先把这里的题写完: <a href="http://123.207.173.126/JudgeOnline/problemset.php" target="_blank" rel="external">http://123.207.173.126/JudgeOnline/problemset.php</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E6%97%A5%E8%AE%B0-2016-11-26/"/>
    <id>http://blog.unown.moe/2017/06/09/日记-2016-11-26/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 日记 2016-11-26<br>date: “2016-11-26T17:10:09+00:00”T+00:00<br>tags: 日记<br>password: “:rabbit:”</p>
<hr>
<p>我发现, 相比于做比赛题, 现在的我更需要看书, 从零开始看…</p>
<p>今天的比赛: <a href="http://115.28.203.224/contest.php?cid=1014" target="_blank" rel="external">http://115.28.203.224/contest.php?cid=1014</a></p>
<p>超惨, 五小时共12题做出来2道… </p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E6%B5%8B%E8%AF%95%E7%94%A8%E5%8D%9A%E6%96%87/"/>
    <id>http://blog.unown.moe/2017/06/09/测试用博文/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 测试用博文<br>date: “2016-11-23T10:41:40+00:00”T+00:00<br>tags: [测试]<br>category: 测试<br>password: test测试<br>abstract: 本博文用于测试博客功能及插件功能.<br>message: “密码: <code>test测试</code>.”</p>
<hr>
<p>本博文用于测试博客功能及插件功能. <sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="Test
">[1]</span></a></sup></p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></div><div class="line"></div><div class="line"><span class="keyword">type</span> String2 <span class="keyword">struct</span> &#123;</div><div class="line">  str1 <span class="keyword">string</span></div><div class="line">  str2 <span class="keyword">string</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s2 String2)</span> <span class="title">combine</span><span class="params">()</span> <span class="title">string</span></span> &#123;</div><div class="line">  <span class="keyword">return</span> str1 + <span class="string">" "</span> + str2</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">  <span class="keyword">var</span> ch = <span class="built_in">make</span>(<span class="keyword">chan</span> String2, <span class="number">0</span>)</div><div class="line">  </div><div class="line">  <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">([]<span class="keyword">byte</span> a, []<span class="keyword">byte</span> b)</span></span> &#123;</div><div class="line">    ch &lt;- String2 &#123;</div><div class="line">      str1: <span class="keyword">string</span>(a),</div><div class="line">      str2: <span class="keyword">string</span>(b),</div><div class="line">    &#125;</div><div class="line">  &#125; ([]<span class="keyword">byte</span>(<span class="string">"Hello"</span>), []<span class="keyword">byte</span> &#123;<span class="string">'w'</span>, <span class="string">'o'</span>, <span class="string">'r'</span>, <span class="string">'l'</span>, <span class="string">'d'</span>&#125;)</div><div class="line">  </div><div class="line">  fmt.Println((&lt;-ch).combine())</div><div class="line">  <span class="built_in">close</span>(ch)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Test<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E6%B1%82%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%9A%84stein%E7%AE%97%E6%B3%95/"/>
    <id>http://blog.unown.moe/2017/06/09/求最大公约数的stein算法/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 求最大公约数的stein算法<br>date: “2016-11-24T16:26:01+00:00”T+00:00</p>
<h2 id="tags-算法-数论"><a href="#tags-算法-数论" class="headerlink" title="tags: 算法-数论"></a>tags: 算法-数论</h2><p><code>stein算法</code>, 个人认为算是<code>更相减损法</code>的改进版. 此算法在计算大数间的最大公约数时更有优势. 详见英文维基百科相关词条<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="https://en.wikipedia.org/wiki/Binary_GCD_algorithm
">[1]</span></a></sup>.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd_stein</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> a, b;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);</div><div class="line">    <span class="keyword">int</span> result = gcd_stein(a, b);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, result);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd_stein</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> c = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (a%<span class="number">2</span>==<span class="number">0</span> &amp;&amp; b%<span class="number">2</span>==<span class="number">0</span>) &#123;</div><div class="line">        a &gt;&gt;= <span class="number">1</span>;</div><div class="line">        b &gt;&gt;= <span class="number">1</span>;</div><div class="line">        c++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">while</span> (a%<span class="number">2</span>==<span class="number">0</span>) a &gt;&gt;= <span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> (b%<span class="number">2</span>==<span class="number">0</span>) b &gt;&gt;= <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="keyword">do</span> &#123;</div><div class="line">        <span class="keyword">if</span> (a &lt; b) &#123;</div><div class="line">            <span class="keyword">int</span> temp = a;</div><div class="line">            a = b;</div><div class="line">            b = temp;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == b) <span class="keyword">break</span>;</div><div class="line">        a = (a - b) &gt;&gt; <span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span> (a%<span class="number">2</span> == <span class="number">0</span>) a &gt;&gt;= <span class="number">1</span>;</div><div class="line">    &#125; <span class="keyword">while</span> (<span class="number">1</span>);</div><div class="line">    <span class="keyword">return</span> b &lt;&lt; c;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p>附带Go语言版本:</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	<span class="keyword">var</span> a, b <span class="keyword">int</span></div><div class="line">	fmt.Scanf(<span class="string">"%d%d"</span>, &amp;a, &amp;b)</div><div class="line">	<span class="keyword">var</span> result = gcdStein(a, b)</div><div class="line">	fmt.Println(result)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">gcdStein</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</div><div class="line">	<span class="keyword">var</span> c = <span class="number">0</span></div><div class="line">	<span class="keyword">for</span> a%<span class="number">2</span> == <span class="number">0</span> &amp;&amp; b%<span class="number">2</span> == <span class="number">0</span> &#123;</div><div class="line">		a /= <span class="number">2</span> <span class="comment">// Go的位移计算只能用在无符号整数上...</span></div><div class="line">		b /= <span class="number">2</span></div><div class="line">		c++</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> a%<span class="number">2</span> == <span class="number">0</span> &#123;</div><div class="line">		a /= <span class="number">2</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> b%<span class="number">2</span> == <span class="number">0</span> &#123;</div><div class="line">		b /= <span class="number">2</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">for</span> &#123;</div><div class="line">		<span class="keyword">if</span> a &lt; b &#123;</div><div class="line">			a, b = b, a</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> a == b &#123;</div><div class="line">			<span class="keyword">break</span></div><div class="line">		&#125;</div><div class="line">		a = (a + b) &gt;&gt; <span class="number">1</span></div><div class="line">		<span class="keyword">for</span> a%<span class="number">2</span> == <span class="number">0</span> &#123;</div><div class="line">			a /= <span class="number">2</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> ; c != <span class="number">0</span>; c-- &#123;</div><div class="line">		b *= <span class="number">2</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> b</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://en.wikipedia.org/wiki/Binary_GCD_algorithm" target="_blank" rel="external">https://en.wikipedia.org/wiki/Binary_GCD_algorithm</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E7%AC%AC%E4%B8%80%E8%B4%B4/"/>
    <id>http://blog.unown.moe/2017/06/09/第一贴/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 第一贴<br>date: “2016-11-23T00:33:17+00:00”T+00:00</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>这是我的第一篇博文.</p>
<p>现在已经是深夜了, 暂时也想不到什么, 就先这样吧~</p>
<p>第一篇博文只是这么草草了事, 感觉还有点小遗憾呢…</p>
<hr>
<p>说起来, 其实现在这个博客站还没有正式搭好.</p>
<p>一是比如评论, tag, 搜索等很多相关的插件还没有装好.</p>
<p>二是这里还仅仅是挂在github pages上. 本来有用七牛对象存储的打算, 但是却因为网站没有备案被拒绝了. 顺便一提, 现在网站的域名是<code>blog.unown.moe</code>, github pags 服务的域名则是<code>purstal.github.io</code>.</p>
<p>还有, 虽然本地要做的事情也不麻烦, 不过也还是有变得更方便的余地的, 就不展开了.</p>
<hr>
<p>嘛, 先睡了~</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.unown.moe/2017/06/09/%E6%83%B3%E5%81%9A%E8%BF%99%E6%A0%B7%E4%B8%80%E6%AC%BE%E6%B8%B8%E6%88%8F/"/>
    <id>http://blog.unown.moe/2017/06/09/想做这样一款游戏/</id>
    <published>2017-06-08T18:20:25.000Z</published>
    <updated>2017-06-08T18:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><hr>
<p>title: 想做这样一款游戏<br>date: “2017-04-10T12:47:54+00:00”T+00:00</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>读狼与香辛料, 让我对欧洲中世纪商人的行商生活产生了兴趣. (当然, 我知道行商生活是很苦的)</p>
<p>我在想, 如果基于VR制作一款模拟那一时期商人行商的游戏, 是不是会别有一番风趣. 嗯, “欧洲中世纪马车模拟”的感觉.</p>
<hr>
<p>由于某个缘故, 你成为了一名旅行商人, 在一片广袤无边的土地上四处行商. </p>
<p>地图不一定是真实的欧洲地图, 也可以像骑马与砍杀那样虚构一片地图, 或者把春秋时期的中国地图套进去(虽然明显时代背景不对), 甚至可以随机生成地图(实现这个可能是有生之年了). </p>
<p>玩家以第一人称视角进行游戏(VR的意义所在), 驾着马车在广阔的游走, 欣赏延路上的风景. 而且玩家不一定要走固定的商路, 地图上能看到的地方基本上都能走. 这要求地图的精度要向上古卷轴、龙腾世纪、巫师等这样同类的开放世界游戏靠拢. 还不确定是否要制作城镇内部.</p>
<p>游戏的宗旨之一便是贴近现实. 所以自然方面, 天气、气候等系统都不能少. 非自然方面, 不仅要有完整的经济系统, 甚至连国家间的政治也会有相应的模拟. 即使暂时看不到影响, 个体的商人、整体的商行都多多少少会在后台做出行动. 因为实际上从一个地点到下一个地点的路途会很长, 所以利用玩家移动的时间进行运算也无不妥.</p>
<p>游戏会忠于还原中世纪的商贸系统. 从物价变化、币种、合约、期货, 到商行、洋行、工会、骑士团、贵族、教会的影响, 都会忠实地体现.</p>
<p>“事件”系统则是游戏的核心之一. 除了”偶然事件”外, 还有”关联事件”, 如果有在进行剧本, 还会有”剧情事件”. 剧本有可能是游戏开始前选择的宏观大剧本, 也可能是游戏中途卷入的剧本. 剧本事件即使不会影响到角色, 但只要点燃导火索, 就会陆续发生. 多个剧本事件可以同时进行, 走向并非玩家可控.</p>
<p>回到”关联事件”, 关联事件是以”如果XXX, 就会YYY”为形式的事件. 比如两个国家爆发了战争, 就会出现部分地区军备涨价的事件. 环境会酿成事件, 事件又会改变环境.</p>
<p>(蝴蝶效应产生的结果总是会很有趣)</p>
<p>玩家并不会在事件触发时/进行中收到弹出的提示窗口, 而是会直接或间接地感受到事件的发生.  最直接的就是亲身经历, 比如佣兵团劫道, 另外就是从其他人身上获得情报.</p>
<p>玩家可以获得情报, 或是看到城镇的告示, 或是聆听酒店里两人的谈话, 或是与路上遇到的其他商人互相交换… 你可能会获得假的情报, 同样你也可以传播假的情报.</p>
<p>行商当中人际关系也十分重要, 与商行的关系越好, 名声越好, 就越容易交易、贷款; 与商人的关系越好, 相互间越信任, 就越容易获得情报. 当然, 如果没有提前安排, 偶然遇到以前认识的旅行商人几乎是不可能的事情. 关系还包括与贵族的关系, 与教会的关系, 与劳动者的关系, 与民众的关系, 与供货方的关系… 关系是一点一点积累而来的, 但是如果处理不当, 就可能会整片地崩塌. 如果没能完成某处的某家商行的契约, 就可能会被整片地区的其他商行唾弃. 而且随着时间的发酵, 可能会愈发地严重, 最后不仅到处被讨债, 而且谁都不愿意与你做生意了.</p>
<p>游戏可以分两个基本模式和多个难度. 除了上述的那个模式之外, 还有上帝视角模式, 省略行商的路途. 难度上来讲, 最难的难度到处需要拿笔记录各种信息, 最简单的难度即使稍微有些无脑也不容易破产, 经济模型也会有所简化.</p>
<p>游戏后期, 你可以雇佣自己的配行商人, 甚至有机会成立自己的商行, 虽然在高难度下几乎不可能.</p>
<hr>
<h2 id="双人行商以及网络版"><a href="#双人行商以及网络版" class="headerlink" title="双人行商以及网络版"></a>双人行商以及网络版</h2><p>即使在单人游戏中, 玩家也可以邀请NPC一同前行, 不过大多数情况下只是临时合作罢了. (但也不是不可能有罗伦斯、赫萝那样的展开, 一起行商旅行)</p>
<p>双人行商, 是指玩家可以邀请另一名玩家陪同自己行商, 一起沉浸在周围的景色之中. 两人间的羁绊也一定能愈来愈深吧.</p>
<p>网络版嘛, 不是DLC就是独立作品了. 顾名思义, 大家在一个大世界中共同竞争, 呃, “EVE中世纪版”?</p>
<h2 id="狼与香辛料"><a href="#狼与香辛料" class="headerlink" title="狼与香辛料?"></a>狼与香辛料?</h2><p>如果有机会, 好想在游戏中还原狼与香辛料中的世界.</p>
<p>然后, 你甚至能以旁观者的视角为罗伦斯和赫萝祝福. (罗伦斯是赫萝的, 赫萝也是罗伦斯的, 谁都不能抢!)</p>
<hr>
<p>待续… </p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;—&quot;&gt;&lt;a href=&quot;#—&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
</feed>
